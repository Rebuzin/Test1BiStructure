/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Sort;
/**
 *
 * @author renan
 */
public class Main {
    public static void main (String args[]){
       BubbleSort executeBubbleSort = new BubbleSort();
       InsertionSort executeInsertionSort = new InsertionSort();
       SelectionSort executeSelectionSort = new SelectionSort();
       QuickSort executeQuickSort = new QuickSort();

        int vetorBubble1[] = {3,7,4,2,1}; //Sequência numérica lida
        int vetorBubble2[] = {7,5,1,3,8}; //Sequência numérica lida

        int vetorInsertion1[] = {8,9,2,3,1}; //Sequência numérica lida
        int vetorInsertion2[] = {4,7,6,5,2}; //Sequência numérica lida

        int vetorSelection1[] = {3,5,1,2,7}; //Sequência numérica lida
        int vetorSelection2[] = {9,1,7,4,5}; //Sequência numérica lida
        
        int vetorQuick1[] = {2,9,3,6,7}; //Sequência numérica lida
        int vetorQuick2[] = {8,5,2,3,11}; //Sequência numérica lida
        int n1 = vetorQuick1.length;
        int n2 = vetorQuick2.length;

       executeBubbleSort.algoritimoBubblesort(vetorBubble1); //Ele deve apresentar:(1  2  3  8  9)
       executeBubbleSort.algoritimoBubblesort(vetorBubble2); //Ele deve apresentar:(1  2  3  8  9)

       executeInsertionSort.algoritmoInsertionSort(vetorInsertion1); //Ele deve apresentar:(1  2  3  8  9)
       executeInsertionSort.algoritmoInsertionSort(vetorInsertion2); //Ele deve apresentar:(1  2  3  8  9)

       executeSelectionSort.algoritmoSelectionSort(vetorSelection1); //Ele deve apresentar:(1  2  3  5  7)
       executeSelectionSort.algoritmoSelectionSort(vetorSelection2); //Ele deve apresentar:(1  4  5  7  9)
       
       executeQuickSort.algoritmoQuickSort(vetorQuick1, 0, n1 - 1);////Ele deve apresentar:(2  3  6  7  9)
       executeQuickSort.printQuickSort(vetorQuick1);
       executeQuickSort.algoritmoQuickSort(vetorQuick2, 0, n2 - 1);////Ele deve apresentar:(2  3  5  8  11)
       executeQuickSort.printQuickSort(vetorQuick2);
    }

}
